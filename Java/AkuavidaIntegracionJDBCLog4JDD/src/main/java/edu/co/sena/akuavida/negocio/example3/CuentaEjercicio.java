/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */
package edu.co.sena.akuavida.negocio.example3;

import edu.co.sena.akuavida.integracion.dao.CuentaDao;
import edu.co.sena.akuavida.integracion.dao.UsusarioDao;
import edu.co.sena.akuavida.integracion.dto.Cuenta;
import edu.co.sena.akuavida.integracion.dto.Ususario;
import edu.co.sena.akuavida.integracion.exceptions.CuentaDaoException;
import edu.co.sena.akuavida.integracion.exceptions.UsusarioDaoException;
import edu.co.sena.akuavida.integracion.factory.CuentaDaoFactory;
import edu.co.sena.akuavida.integracion.factory.UsusarioDaoFactory;
import edu.co.sena.akuavida.integracion.jdbc.UsusarioDaoImpl;
import static edu.co.sena.akuavida.negocio.example2.CuentaDaoSample.getCuentaDao;

public class CuentaEjercicio {

    public static void main(String[] args) throws CuentaDaoException, UsusarioDaoException {

        Ususario usu = new Ususario();
        usu.setIdUsusario("1");
        usu.setPassword("987654321");
        usu.setRol("Cliente");
        usu.setEstado("Activo");

        UsusarioDao daoUsu = UsusarioDaoFactory.create();
        //daoUsu.insert(usu);

        Ususario arregloUsuario[] = daoUsu.findAll();

        for (int i = 0; i < arregloUsuario.length; i++) {
            arregloUsuario[i].toString();
        }
        System.out.println("_____________");

        usu.setRol("Administrador");
//        daoUsu.update(usu.createPk(), usu);

        Ususario arregloUsuario2[] = daoUsu.findAll();

        for (int i = 0; i < arregloUsuario2.length; i++) {
            System.out.println(arregloUsuario2[i].toString());

        }

        String sql = "select * from akuavida.ususario usu where usu.idUsusario = ?;";

        String parametro0[] = new String[1];
        parametro0[0] = usu.getIdUsusario();

        Ususario arreglitoUsuario[] = daoUsu.findByDynamicSelect(sql, parametro0);
        for (int i = 0; i < arreglitoUsuario.length; i++) {
            System.out.println(arreglitoUsuario[i].toString());
        }
        
        System.out.println("_____________");
        
        String sql5 = " idUsusario = ?";

        String parametro00[] = new String[1];
        parametro00[0] = usu.getIdUsusario();

        Ususario arreglitoUsuari00[] = daoUsu.findByDynamicWhere(sql5, parametro00);
        for (int i = 0; i < arreglitoUsuari00.length; i++) {
            System.out.println(arreglitoUsuari00[i].toString());
        }

        Ususario arreglitoUsu[] = daoUsu.findWhereEstadoEquals("Activo");
        for (int i = 0; i < arreglitoUsu.length; i++) {
            System.out.println(arreglitoUsu[i].toString());
        }

        System.out.println("_____________");

        Ususario arreglitoUsu1[] = daoUsu.findWhereRolEquals("Administrador");
        for (int i = 0; i < arreglitoUsu1.length; i++) {
            System.out.println(arreglitoUsu1[i].toString());
        }

        System.out.println("_____________________");

        Ususario arreglitoUsu2[] = daoUsu.findWherePasswordEquals("987654321");
        for (int i = 0; i < arreglitoUsu2.length; i++) {
            System.out.println(arreglitoUsu2[i].toString());
        }

        System.out.println("_____________________");

        Ususario arreglitoUsu3[] = daoUsu.findWhereIdUsusarioEquals("1");
        for (int i = 0; i < arreglitoUsu3.length; i++) {
            System.out.println(arreglitoUsu3[i].toString());
        }

        Ususario arreglitoUsu4 = daoUsu.findByPrimaryKey(usu.createPk());
        System.out.println(arreglitoUsu4.toString());

        UsusarioDaoImpl usuI = new UsusarioDaoImpl();
        System.out.println(usuI.getTableName());

        usu.setIdUsusario("1");
        daoUsu.delete(usu.createPk());


    }

}
